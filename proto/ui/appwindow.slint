import { SpinBox, Button, CheckBox, Slider, LineEdit, ScrollView, ListView,
    HorizontalBox, VerticalBox, GridBox, StandardButton, Palette , StandardListView, GroupBox } from "std-widgets.slint";


export component AppWindow inherits Window {
    callback request-generate-keys();
    callback encrypt(string);
    callback decrypt(string);
    callback sign(string);
    callback verifyData(string);
    callback reset();
    width: 500px;
    height: 700px;

VerticalBox {}
    
    in-out property <string> statusKey;
    in-out property <string> encryptedValue;
    in-out property <string> decryptedValue;
    in-out property <string> signValue;
    in-out property <string> verfiyData;
    in-out property <string> verfiy;
    
    VerticalBox {
        Text {text: "Private Key = \{root.statusKey}";height: 30px;}
        Text {text: "Encryption & Decryption";height: 25px;font-size: 18px;}
        Text {text: "Text to Encrypt";}


        HorizontalBox { 
            encryptedValue := LineEdit {width: 300px;height: 30px;
                accepted(text) => {root.encryptedValue = self.text;}}
        HorizontalBox{ Button {
            width: 90px;            
            text: "Encrypt";
            clicked => {
                root.encrypt(encryptedValue.text);}}}
        }   



        Text {text: "Encrypted vaule:"; }

        HorizontalBox {
            decryptedValue := LineEdit {width: 300px;height: 30px;
                accepted(text) => {root.decryptedValue = self.text;}}
        HorizontalBox{ Button {
            width: 90px;            
            text: "Decrypt";
            clicked => {
                root.decrypt(decryptedValue.text);}}}
        }
        
        Text {text: "Verfiy & Sign";height: 25px;font-size: 18px;}
        Text {text: "Text to sign";}


        HorizontalBox {
            signValue := LineEdit {width: 300px;height: 30px;
                accepted(text) => {root.signValue = self.text;}}
        HorizontalBox{ Button {
            width: 90px;            
            text: "Sign";
            clicked => {root.sign(signValue.text);}}}
        }

        Text {text: "Signature: ";}

        HorizontalBox {
            verfiyData := LineEdit {width: 300px;height: 30px;
                accepted(text) => {root.verfiyData = self.text;}}
        HorizontalBox{ Button {
            width: 90px;            
            text: "Verfiy";
            clicked => {root.verifyData(verfiyData.text);}}}
        }

        Text {text: "Verify Status";}

        HorizontalBox{ Button {
            width: 90px;            
            text: "clear";
            clicked => {root.reset();}}}
          
    }
}
