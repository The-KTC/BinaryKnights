import { SpinBox, Button, CheckBox, Slider, LineEdit, ScrollView, ListView,
    HorizontalBox, VerticalBox, GridBox, StandardButton, Palette , StandardListView, GroupBox } from "std-widgets.slint";


export component AppWindow inherits Window {
    callback request-generate-keys();
    callback encrypt(string);
    callback decrypt(string);
    callback sign(string);
    callback verifyData(string, string); // signed und sign-input
    callback reset();
    width: 500px;
    height: 700px;

VerticalBox {}
    /** statusKey zeigt an, ob Keys in der SE generiert werden konnten
        input == erste Eingabe f端r das Encrypten
        encryptedValue == Verschl端sselung von input
        decryptedValue == Entschl端sselung von encryptedValue
        signValue == input zum Signen
        verify == der signierte Input
        status == ob der Input zum Signieren und der signierte Input 端bereinstimmt
    */

    in-out property <string> statusKey;    
    in-out property <string> input;
    in-out property <string> encryptedValue;
    in-out property <string> decryptedValue;
    in-out property <string> signValue;
    in-out property <string> verify; 
    in-out property <string> status;

    VerticalBox {
        Text {text: "Key-Status: \{root.statusKey}";height: 30px; font-size: 20px; }
        Text {text: "Encryption & Decryption";height: 25px;font-size: 18px;}
        Text {text: "Text to Encrypt";}


        HorizontalBox { 
            input := LineEdit {width: 300px;height: 30px;
                text: root.input;}
        HorizontalBox{ Button {
            width: 90px;            
            text: "Encrypt";
            clicked => {
                root.encrypt(input.text);}}}}
        

        Text {text: "Encrypted vaule"; }

        HorizontalBox {
            encryptedValueText := LineEdit {width: 300px;height: 30px; enabled: false;
                text: root.encryptedValue;}
        HorizontalBox{ Button {
            width: 90px;            
            text: "Decrypt";
            clicked => {
                root.decrypt(encryptedValueText.text);}}}
        }

        Text {text: "Decrypted vaule: \{root.decryptedValue}"; }
        
        Text {text: "Verify & Sign";height: 25px;font-size: 18px;}
        Text {text: "Text to sign";}


        HorizontalBox {
            signValue := LineEdit {width: 300px;height: 30px;
            text: root.signValue;}
        HorizontalBox{ Button {
            width: 90px;            
            text: "Sign";
            clicked => {root.sign(signValue.text);}}}
        }
    
        Text {text: "Signature: ";}

        HorizontalBox {
            verifyData := LineEdit {width: 300px;height: 30px;enabled: false;
                text: root.verify;}
        HorizontalBox{ Button {
            width: 90px;            
            text: "verify";
            clicked => {root.verifyData(verifyData.text, signValue.text);}}}
        }
        HorizontalBox {
            Text {text: "Verify Status: \{root.status}";}
        }
        HorizontalBox{ Button {
            width: 90px;            
            text: "clear";
            clicked => {
                root.input="";
                root.encryptedValue="";
                root.decryptedValue="";
                root.signValue="";
                root.verify="";
                root.status="";
            }}}
    }
}